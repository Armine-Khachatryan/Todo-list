{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Armine\\\\Desktop\\\\react-u1\\\\src\\\\components\\\\ToDo\\\\ToDo.jsx\";\nimport React, { Component } from 'react';\nimport styles from './ToDo.module.css';\nimport { Container, Row, Col, Card, Button, FormControl, InputGroup } from 'react-bootstrap';\nimport idGenerator from '../../helpers/idGenerator';\nexport default class Todo extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      inputValue: '',\n      tasks: [],\n      selectedTasks: []\n    };\n\n    this.handleChange = event => {\n      this.setState({\n        inputValue: event.target.value\n      });\n    };\n\n    this.addTask = () => {\n      const inputValue = this.state.inputValue.trim();\n\n      if (!inputValue) {\n        return;\n      }\n\n      const newTask = {\n        _id: idGenerator(),\n        title: inputValue\n      };\n      const tasks = [...this.state.tasks, newTask];\n      this.setState({\n        tasks,\n        inputValue: ''\n      });\n    };\n\n    this.deleteTask = taskId => {\n      const newTasks = this.state.tasks.filter(task => taskId !== task._id);\n      this.setState({\n        tasks: newTasks\n      });\n    };\n  }\n\n  render() {\n    const {\n      tasks,\n      inputValue\n    } = this.state;\n    const taskComponents = tasks.map(task => {\n      return /*#__PURE__*/_jsxDEV(Col, {\n        xs: 12,\n        sm: 6,\n        md: 4,\n        lg: 3,\n        xl: 2,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          className: styles.task,\n          children: /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n              children: task.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n              children: \"Some quick example text to build on the card title and\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"danger\",\n              onClick: () => this.deleteTask(task._id),\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this)\n      }, task._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this);\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"ToDo List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        children: [/*#__PURE__*/_jsxDEV(Row, {\n          className: \"justify-content-center\",\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            xs: 10,\n            children: /*#__PURE__*/_jsxDEV(InputGroup, {\n              className: \"mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(FormControl, {\n                placeholder: \"Input your task\",\n                value: inputValue,\n                onChange: this.handleChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(InputGroup.Append, {\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"outline-primary\",\n                  onClick: this.addTask,\n                  children: \"Add\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 97,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          children: taskComponents\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Armine/Desktop/react-u1/src/components/ToDo/ToDo.jsx"],"names":["React","Component","styles","Container","Row","Col","Card","Button","FormControl","InputGroup","idGenerator","Todo","state","inputValue","tasks","selectedTasks","handleChange","event","setState","target","value","addTask","trim","newTask","_id","title","deleteTask","taskId","newTasks","filter","task","render","taskComponents","map"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport  styles from'./ToDo.module.css';\r\nimport { Container, Row, Col, Card, Button, FormControl, InputGroup } from 'react-bootstrap';\r\nimport idGenerator from '../../helpers/idGenerator';\r\n\r\nexport default class Todo extends Component {\r\n    state = {\r\n        inputValue: '',\r\n        tasks: [],\r\n        selectedTasks: []\r\n    };\r\n\r\n    handleChange = (event) => {\r\n        this.setState({\r\n            inputValue: event.target.value\r\n        });\r\n    };\r\n\r\n    addTask = () => {\r\n        const inputValue = this.state.inputValue.trim();\r\n\r\n        if (!inputValue) {\r\n            return;\r\n        }\r\n\r\n        const newTask = {\r\n            _id: idGenerator(),\r\n            title: inputValue\r\n        };\r\n\r\n\r\n        const tasks = [...this.state.tasks, newTask];\r\n\r\n\r\n        this.setState({\r\n            tasks,\r\n            inputValue: ''\r\n        });\r\n    };\r\n\r\n    deleteTask = (taskId) => {\r\n        const newTasks = this.state.tasks.filter((task) => taskId !== task._id);\r\n\r\n        this.setState({\r\n            tasks: newTasks\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { tasks, inputValue } = this.state;\r\n\r\n        const taskComponents = tasks.map((task) => {\r\n\r\n            return (\r\n                <Col\r\n                    key={task._id}\r\n                    xs={12}\r\n                    sm={6}\r\n                    md={4}\r\n                    lg={3}\r\n                    xl={2}\r\n                >\r\n                    <Card className={styles.task}>\r\n\r\n                        <Card.Body>\r\n                            <Card.Title>{task.title}</Card.Title>\r\n                            <Card.Text>\r\n                                Some quick example text to build on the card title and\r\n                  </Card.Text>\r\n                            <Button\r\n                                variant=\"danger\"\r\n                                onClick={() => this.deleteTask(task._id)}\r\n                            >\r\n                                Delete\r\n                  </Button>\r\n                        </Card.Body>\r\n                    </Card>\r\n\r\n\r\n                </Col>\r\n            )\r\n        });\r\n\r\n        return (\r\n            <div>\r\n                <h2>ToDo List</h2>\r\n                <Container>\r\n                    <Row className=\"justify-content-center\">\r\n                        <Col xs={10}>\r\n                            <InputGroup className=\"mb-3\">\r\n                                <FormControl\r\n                                    placeholder=\"Input your task\"\r\n                                    value={inputValue}\r\n                                    onChange={this.handleChange}\r\n                                />\r\n                                <InputGroup.Append>\r\n                                    <Button\r\n                                        variant=\"outline-primary\"\r\n                                        onClick={this.addTask}\r\n                                    >\r\n                                        Add\r\n                                    </Button>\r\n                                </InputGroup.Append>\r\n                            </InputGroup>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        {taskComponents}\r\n                    </Row>\r\n                </Container>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}